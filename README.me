# FórumHub - API com Autenticação JWT

## Descrição do Projeto

O **FórumHub** é uma API RESTful desenvolvida em Java com Spring Boot para gerenciar tópicos de discussão. A API implementa autenticação utilizando o padrão **JWT (JSON Web Token)**, garantindo maior segurança nas interações com a aplicação.

## Funcionalidades

### Tópicos
- **Cadastro de Tópicos:** Permite criar novos tópicos com título, mensagem, autor e curso.
- **Listagem de Tópicos:** Exibe todos os tópicos cadastrados, com opções de ordenação, filtros e paginação.
- **Detalhamento de Tópico:** Exibe informações completas de um tópico específico.
- **Atualização de Tópico:** Atualiza os dados de um tópico existente.
- **Exclusão de Tópico:** Remove um tópico do sistema.

### Autenticação
- **Login:** Geração de token JWT para usuários autenticados.
- **Validação do Token:** Verifica a validade do token nas requisições protegidas.

## Tecnologias Utilizadas
- **Linguagem:** Java 17
- **Frameworks:** Spring Boot, Spring Security, Spring Data JPA
- **Banco de Dados:** MySQL
- **Autenticação:** JSON Web Token (JWT)
- **Ferramentas Auxiliares:** Flyway para migração do banco de dados
- **Testes:** Insomnia/Postman para testar a API

## Configuração do Ambiente

### Requisitos
- Java 17+
- Maven
- MySQL

### Instalação
1. Clone o repositório:
   ```bash
   git clone <URL_DO_REPOSITORIO>
   cd forumhub
   ```

2. Configure o banco de dados:
   - Crie um banco de dados no MySQL.
   - Atualize o arquivo `application.properties` com as credenciais do banco:
     ```properties
     spring.datasource.url=jdbc:mysql://localhost:3306/forumhub
     spring.datasource.username=<SEU_USUARIO>
     spring.datasource.password=<SUA_SENHA>
     
     jwt.secret=<SUA_CHAVE_SECRETA>
     jwt.expiration=86400000 # Expiração do token em milissegundos
     ```

3. Instale as dependências:
   ```bash
   mvn install
   ```

4. Execute as migrações do banco:
   ```bash
   mvn flyway:migrate
   ```

5. Inicie o servidor:
   ```bash
   mvn spring-boot:run
   ```

## Endpoints da API

### Autenticação
- **POST /auth/login:**
  - **Requisição:**
    ```json
    {
      "username": "seu_usuario",
      "password": "sua_senha"
    }
    ```
  - **Resposta:**
    ```json
    {
      "token": "<TOKEN_JWT>"
    }
    ```

### Tópicos
- **GET /topicos:** Lista todos os tópicos.
- **GET /topicos/{id}:** Detalha um tópico específico.
- **POST /topicos:** Cria um novo tópico.
- **PUT /topicos/{id}:** Atualiza um tópico existente.
- **DELETE /topicos/{id}:** Exclui um tópico.

### Observação
Todos os endpoints de tópicos exigem autenticação. Adicione o cabeçalho `Authorization` com o token JWT:
```http
Authorization: Bearer <TOKEN_JWT>
```

## Estrutura do Projeto
```plaintext
src/
|-- main/
|   |-- java/
|   |   |-- com.forumhub/
|   |   |   |-- controller/   # Controladores da API
|   |   |   |-- entidadees/  # Modelos de dados
|   |   |   |-- repository/   # Interfaces do Spring Data JPA
|   |   |   |-- service/      # Serviços da aplicação
|   |   |   |-- seguranca/       # Configurações de segurança
|   |-- resources/
|       |-- db/migration/     # Scripts de migração Flyway
|       |-- application.properties
|-- test/                     # Testes da API
```

## Testando a API
Utilize ferramentas como Postman ou Insomnia para testar os endpoints. Certifique-se de incluir o token JWT nos endpoints protegidos.

## Contribuição
Contribuições são bem-vindas! Sinta-se à vontade para abrir uma issue ou submeter um pull request.

## Licença
Este projeto está licenciado sob a [MIT License](LICENSE).

## Contato
Para dúvidas ou sugestões, entre em contato com:
- **David Barroso**: [davidbars20@hotmail.com](mailto:davidbars20@hotmail.com)

